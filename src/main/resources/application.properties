spring.application.name=spring-hadoop
#port
server.port=8080
#log
spring.output.ansi.enabled=ALWAYS
logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %cyan(%msg%n)

#haddop
spring.hadoop.fs.defaultFS=fs.defaultFS
#spring.hadoop.fs.uri=hdfs://localhost:9000
spring.hadoop.fs.uri=hdfs://hadoop-hadoop-hdfs-nn.data.svc.cluster.local:9000

#postgress
#hive-metastore-postgresql.data.svc.cluster.local:5432

#prometheues
management.endpoints.web.expose=*
management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true
management.endpoint.metrics.enabled=true

#exemples
#spring.datasource.driver=cdata.jdbc.hdfs.HDFSDriver
#spring.datasource.url=jdbc:hdfs:Host=sandbox-hdp.hortonworks.com;Port=50070;Path=/user/root;User=root;

#hive
#spring.datasource.hivedb.username=test
#spring.datasource.hivedb.password=test
#spring.datasource.hivedb.url=jdbc:hive2://localhost:10001/default;transportMode=http;httpPath=cliservice
#spring.datasource.hivedb.driver-class-name=
##spring.datasource.hivedb.initial-size=<<define as per your load>>
#spring.datasource.hivedb.validation-query=<<for hive select query>>
#spring.datasource.hivedb.validation-query-timeout=3
#spring.datasource.hivedb.test-on-borrow=true
#spring.datasource.hivedb.max-wait=60000

#hive.connectionURL=jdbc:hive2://localhost:10001/default;transportMode=http;httpPath=cliservice
#hive.username=
#hive.password= 
